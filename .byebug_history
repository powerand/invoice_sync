q
interpolation
err
q
err
q
yyqy
ubject_id
ubject_d
q
socket.methods
socket
request_headers['X-RMXHR']
@not_modified
q
r
y
err
rr
q
interpolation[/\<\%(.+?)\%\>/m, 1]
interpolation
err
c
err
q
c
err
q
curr_result_checksum
last_result_checksum
q
last_result_checksum
curr_result_checksum
@not_modified
next
sessionid
c
@not_modified
next
curr_result_checksum
next
sessionid
session_id
q
sessionid
next
c
next
c
sessionid
next
sessionid
c
sessionid
next
c
sessionid
next
c
next
@cookie
next
@not_modified
next
sessionid
next
@cookie
next
@params
next
@referer
next
@not_modified
next
last_result_checksum
curr_result_checksum
next
checksum_subject
next
sessionid
next
last_result_checksum
q
@cookie[/sessionid\=(.+?)(?:\;|$)/, 1]
@cookie[/sessionid\=(.+?)(?:\;|$)/, 2]
@cookie[/sessionid\=(.+?)(:?\;|$)/, 2]
@cookie[/sessionid\=(.+?)(?:\;|$)/, 2]
@cookie[/sessionid\=(.+?)(?:\;|$)/, 1]
@cookie[/sessionid\=(.+?)(:?\;|$)/, 1]
@cookie[/sessionid\=(.+?)\;|$/, 1]
q
@cookie[/sessionid\=(.+)\;?/, 1]
@cookie[/sessionid\=(.+?)\;?/, 1]
c
err
q
puts err.backtrace
err.backtrace
err
c
curr_result_checksum == last_result_checksum
last_result_checksum
curr_result_checksum
q
puts err.backtrace
err.backtrace
err.backtracwe
err
q
c
body
q
nil.to_i
1*nil
err
q
err
q
puts err.backtrace
err.backtrace
err
c
err
q
err
q
err
c
err
q
err
q
err
c
err
c
@result.to_json
@result
err
c
@result
q
MYSQL_CLIENTS[0].automatic_close?
MYSQL_CLIENTS[0].server_info
MYSQL_CLIENTS[0].info
MYSQL_CLIENTS[0].methods
MYSQL_CLIENTS[0].connected?
MYSQL_CLIENTS[0].connected
MYSQL_CLIENTS[0].connect
MYSQL_CLIENTS[0]
MYSQL_CLIENTS
err
q
err
q
err
c
@market_index
err
q
err
c
q
err
q
err
q
interpolation
err
next
step
MYSQL_CLIENTS[0].query('select 10')
MYSQL_CLIENTS[0]
next
MYSQL_CLIENTS[market_index]
next
MYSQL_CLIENTS[market_index].query("select 10")
MYSQL_CLIENTS[market_index]
q
err
c
err
q
err.backtrace
err
q
puts err.backtrace
err.backtrace
err
c
puts RESULT.sort_by{|k,v| k.split(DELIMIER)[1]}.to_h.keys
RESULT.sort_by{|k,v| k.split(DELIMIER)[1]}.to_h.keys
RESULT.sort_by{|k,v| k.split(DELIMIER)[1]}.to_h
RESULT.sort_by{|k,v| k.split(DELIMIER)[1]}.TO_H
RESULT.sort_by{|k,v| k.split(DELIMIER)[1]}
RESULT.sort_by{|k,v| puts k.split(DELIMIER)[1]}
RESULT.sort_by{|k,v| puts k.split(DELIMIER)}
RESULT.sort_by{|k,v| puts k}
RESULT.sort_by
RESULT.sort
RESULT
q
c
k[0].split(DELIMIER)[1]
q
err
q
k
q
err
ERR
q
element
key
q
MARKET_INDEX
main_sql_request
puts err.backtrace
err.backtrace
err
ERR
q
err
q
err
q
err
er
q
hash
key
hash
hash[key]
hash[key]['QUANTITY']
hash
next
hash[key]['QUANTITY']
 element['QUANTITY'].to_i
hash[key]['QUANTITY']
hash[key]
key
q
key
hash
hash[key]
hash[key]['QUANTITY']
err
q
err
q
err
q
err
q
err
